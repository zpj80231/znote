(window.webpackJsonp=window.webpackJsonp||[]).push([[72],{539:function(a,s,t){"use strict";t.r(s);var r=t(4),e=Object(r.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("Boxx"),a._v(" "),s("p",[a._v("找出某个Java进程中最耗费CPU的Java线程并定位堆栈信息，用到的命令有：ps、top、printf、jstack、grep。当然还有神器：arthas。")]),a._v(" "),s("p"),s("div",{staticClass:"table-of-contents"},[s("ul",[s("li",[s("a",{attrs:{href:"#问题原因"}},[a._v("问题原因")])]),s("li",[s("a",{attrs:{href:"#传统排查步骤"}},[a._v("传统排查步骤")]),s("ul",[s("li",[s("a",{attrs:{href:"#jps"}},[a._v("jps")])]),s("li",[s("a",{attrs:{href:"#jstack"}},[a._v("jstack")])])])]),s("li",[s("a",{attrs:{href:"#arthas-排查"}},[a._v("Arthas 排查")]),s("ul",[s("li",[s("a",{attrs:{href:"#jdk-环境"}},[a._v("jdk 环境")])]),s("li",[s("a",{attrs:{href:"#jre-环境"}},[a._v("jre 环境")])]),s("li",[s("a",{attrs:{href:"#常用命令速查表-arthas"}},[a._v("常用命令速查表（Arthas）")])])])]),s("li",[s("a",{attrs:{href:"#其他命令排查"}},[a._v("其他命令排查")])]),s("li",[s("a",{attrs:{href:"#相关脚本"}},[a._v("相关脚本")])])])]),s("p"),a._v(" "),s("h2",{attrs:{id:"问题原因"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#问题原因"}},[a._v("#")]),a._v(" 问题原因")]),a._v(" "),s("p",[a._v("现实企业级Java应用开发、维护中，有时候我们会碰到下面这些问题：")]),a._v(" "),s("ul",[s("li",[a._v("OutOfMemoryError，内存不足")]),a._v(" "),s("li",[a._v("内存泄露")]),a._v(" "),s("li",[a._v("线程死锁")]),a._v(" "),s("li",[a._v("锁争用（Lock Contention）")]),a._v(" "),s("li",[a._v("Java进程消耗CPU过高\n......")])]),a._v(" "),s("p",[a._v("这些问题在日常开发、维护中可能被很多人忽视（比如有的人遇到上面的问题只是重启服务器或者调大内存，而不会深究问题根源），但能够理解并解决这些问题是Java程序员进阶的必备要求。")]),a._v(" "),s("h2",{attrs:{id:"传统排查步骤"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#传统排查步骤"}},[a._v("#")]),a._v(" 传统排查步骤")]),a._v(" "),s("h3",{attrs:{id:"jps"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jps"}},[a._v("#")]),a._v(" jps")]),a._v(" "),s("p",[a._v("jps主要用来输出JVM中运行的进程状态信息。语法格式如下：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("jps "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("options"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("hostid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("如果不指定hostid就默认为当前主机或服务器。")]),a._v(" "),s("p",[a._v("命令行参数选项说明如下：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-q")]),a._v(" 不输出类名,Jar名和传入main方法的参数\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" 输出传入main方法的参数\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" 输出main类或Jar的全限名\n\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-v")]),a._v(" 输出传入JVM的参数\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br")])]),s("p",[a._v("比如下面：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("root@ubuntu:/"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# jps -m -l")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2458")]),a._v(" org.artifactory.standalone.main.Main /usr/local/artifactory-2.2.5/etc/jetty.xml\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("29920")]),a._v(" com.sun.tools.hat.Main "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9998")]),a._v(" /tmp/dump.dat\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3149")]),a._v(" org.apache.catalina.startup.Bootstrap start\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("30972")]),a._v(" sun.tools.jps.Jps "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-m")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("8247")]),a._v(" org.apache.catalina.startup.Bootstrap start\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("25687")]),a._v(" com.sun.tools.hat.Main "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-port")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("9999")]),a._v(" dump.dat\n"),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("21711")]),a._v(" mrf-center.jar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("h3",{attrs:{id:"jstack"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jstack"}},[a._v("#")]),a._v(" jstack")]),a._v(" "),s("p",[a._v("jstack主要用来查看某个Java进程内的线程堆栈信息。语法格式如下：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[a._v("jstack "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" pid\njstack "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" executable core\njstack "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("option"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("server-id@"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("remote-hostname-or-ip\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("命令行参数选项说明如下：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 会打印出额外的锁信息")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在发生死锁时可以用 jstack -l pid 来观察锁持有情况")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -m mixed mode，不仅会输出Java堆栈信息，还会输出C/C++堆栈信息（比如Native方法）")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-l")]),a._v(" long listings\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("jstack可以定位到线程堆栈，根据堆栈信息我们可以定位到具体代码，所以它在JVM性能调优中使用得非常多。")]),a._v(" "),s("p",[a._v("下面我们来一个实例找出某个Java进程中最耗费CPU的Java线程并定位堆栈信息，用到的命令有ps、top、printf、jstack、grep。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("第一步：")]),a._v(" 先找出Java进程ID，服务器上的Java应用名称为 wordcount.jar：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@storm-master home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-ef")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" wordcount\nroot    "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2860")]),a._v("  "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2547")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("13")]),a._v(" 02:09 pts/0  00:02:03 "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" wordcount.jar /home/input "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v(" \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("得到进程ID为 2860 。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("第二步：")]),a._v(" 找出该进程内最耗费CPU的线程，可以使用如下3个命令，这里我们使用第3个命令得出如下结果：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("ps -Lfp pid ： 即 ps -Lfp 2860")])]),a._v(" "),s("li",[s("p",[a._v("ps -mp pid -o THREAD, tid, time ：即 ps -mp 2860 -o THREAD,tid,time")])]),a._v(" "),s("li",[s("p",[a._v("top -Hp pid： 即 "),s("strong",[a._v("top -Hp 2860")])])])]),a._v(" "),s("p",[a._v("这里用第三个命令："),s("code",[a._v("top -Hp 2860")])]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("top")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-Hp")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2860")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("输出如下：")]),a._v(" "),s("p",[s("img",{attrs:{src:"/znote/img/backend/ThreadTopCpuList.png",alt:"img"}})]),a._v(" "),s("p",[a._v("TIME列就是各个Java线程耗费的CPU时间，显然CPU时间最长的是ID为2968的线程，用")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("printf")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"%x'),s("span",{pre:!0,attrs:{class:"token entity",title:"\\n"}},[a._v("\\n")]),a._v('"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2968")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("得到2968的十六进制值为b98，下面会用到。")]),a._v(" "),s("hr"),a._v(" "),s("p",[s("strong",[a._v("第三步：")]),a._v(" 终于轮到jstack上场了，它用来输出进程2860的堆栈信息，然后根据线程ID的十六进制值grep，如下：")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@storm-master home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" jstack "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("2860")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" b98 \n"),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"SessionTracker"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("prio")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("tid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("0x00007f55a44e4800 "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("nid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("0xb53 "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" Object.wait"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("0x00007f558e06c000 \n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("可以看到CPU消耗在SessionTracker这个类的Object.wait()，于是就能很容易的定位到相关的代码了。")]),a._v(" "),s("p",[a._v("当然，可以 "),s("code",[a._v("jstack -l pid > /tmp/thread.txt")]),a._v(" 在导出的文件中搜索，就可以定位到具体的线程，类。")]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"arthas-排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#arthas-排查"}},[a._v("#")]),a._v(" Arthas 排查")]),a._v(" "),s("h3",{attrs:{id:"jdk-环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jdk-环境"}},[a._v("#")]),a._v(" jdk 环境")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("下载并解压 arthas")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /opt/arthas\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-O")]),a._v(" arthas-packaging-4.0.5-bin.zip "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v("'https://maven.aliyun.com/repository/public/com/taobao/arthas/arthas-packaging/4.0.5/arthas-packaging-4.0.5-bin.zip'")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("unzip")]),a._v(" arthas-packaging-4.0.5-bin.zip\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("启动 arthas，"),s("a",{attrs:{href:"https://arthas.aliyun.com/doc/quick-start.html#_2-%E5%90%AF%E5%8A%A8-arthas",target:"_blank",rel:"noopener noreferrer"}},[a._v("官网传送门"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# https://arthas.aliyun.com/doc/quick-start.html#_2-%E5%90%AF%E5%8A%A8-arthas")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" arthas-boot.jar\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("输入 "),s("code",[a._v("dashboard")]),a._v("，按 "),s("code",[a._v("回车/enter")]),a._v("，会展示当前进程的信息， 按 "),s("code",[a._v("ctrl+c")]),a._v(" 可以中断执行。"),s("a",{attrs:{href:"https://arthas.aliyun.com/doc/dashboard.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("dashboard 传送门"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("img",{attrs:{src:"/znote/img/backend/arthas/arthas-dashboard.png",alt:"arthas-dashboard.png"}})]),a._v(" "),s("p",[a._v("或者输入 "),s("code",[a._v("thread -n 10")]),a._v("，指定最忙的前 10 个线程并打印堆栈。"),s("a",{attrs:{href:"https://arthas.aliyun.com/doc/thread.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("thread 传送门"),s("OutboundLink")],1)]),a._v(" "),s("p",[s("img",{attrs:{src:"/znote/img/backend/arthas/arthas-thread.png",alt:"arthas-thread.png"}})])]),a._v(" "),s("li",[s("p",[a._v("最后根据线程堆栈并分析业务代码，定位问题即可")])])]),a._v(" "),s("h3",{attrs:{id:"jre-环境"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#jre-环境"}},[a._v("#")]),a._v(" jre 环境")]),a._v(" "),s("p",[a._v("如果是在 docker 里并且使用的是 jre 启动项目的话，需要 jre 结合 jattach 来使用 arthas：")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("不同系统 jattach 项目安装和配置指南，"),s("a",{attrs:{href:"https://blog.csdn.net/gitblog_01239/article/details/143042639",target:"_blank",rel:"noopener noreferrer"}},[a._v("传送门"),s("OutboundLink")],1)]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" jattach\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("找出 java 进程 pid")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" aux "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("|")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("grep")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"/znote/img/backend/arthas/arthas-java-pid.png",alt:"arthas-java-pid.png"}})]),a._v(" "),s("p",[a._v("这里以 pid 是 7 的举例")])]),a._v(" "),s("li",[s("p",[a._v("需要使用如下命令启动 arthas")]),a._v(" "),s("div",{staticClass:"language-shell line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-shell"}},[s("code",[s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("pid")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("7")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\njattach "),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${pid}")]),a._v(" load instrument "),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("false")]),a._v(" /opt/arthas/arthas-agent.jar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("java")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token parameter variable"}},[a._v("-jar")]),a._v(" /opt/arthas/arthas-client.jar "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("127.0")]),a._v(".0.1 "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3658")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])])]),a._v(" "),s("li",[s("p",[a._v("启动成功，使用 arthas 命令如 "),s("code",[a._v("dashboard")]),a._v(" 和 "),s("code",[a._v("thread")]),a._v(" 进行分析即可")])])]),a._v(" "),s("h3",{attrs:{id:"常用命令速查表-arthas"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常用命令速查表-arthas"}},[a._v("#")]),a._v(" 常用命令速查表（Arthas）")]),a._v(" "),s("p",[s("img",{attrs:{src:"/znote/img/backend/arthas/arthas_command.png",alt:"arthas_command.png"}})]),a._v(" "),s("h2",{attrs:{id:"其他命令排查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#其他命令排查"}},[a._v("#")]),a._v(" 其他命令排查")]),a._v(" "),s("p",[s("strong",[a._v("查看某进程及某线程占用 CPU 的例子")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("jps")]),a._v(": 列出 java 进程,找到 pid.")]),a._v(" "),s("li",[s("code",[a._v("pidstat -p pid -u 1 3 -u -t")]),a._v(": 查看 pid 的进程所有线程的 cpu 使用情况.")]),a._v(" "),s("li",[s("code",[a._v("jstack -l pid > /tmp/thread.txt")]),a._v(": 导出指定 Java 应用的所有线程.")])]),a._v(" "),s("p",[a._v("然后查看 "),s("code",[a._v("nid=xxx")]),a._v("(即第二步里线程号的线程),即可定位到某段代码.")]),a._v(" "),s("p",[s("strong",[a._v("查看某进程及某线程占用 IO 的例子")])]),a._v(" "),s("ul",[s("li",[s("code",[a._v("jps")]),a._v(": 列出 java 进程,找到 pid.")]),a._v(" "),s("li",[s("code",[a._v("pidstat -p pid -u 1 3 -d -t")]),a._v(": 查看 pid 的进程所有线程的 IO 使用情况.")]),a._v(" "),s("li",[s("code",[a._v("jstack -l pid > /tmp/thread.txt")]),a._v(": 导出指定 Java 应用的所有线程.")])]),a._v(" "),s("p",[a._v("然后查看 "),s("code",[a._v("nid=xxx")]),a._v("(即第二步里线程号的线程),即可定位到某段代码.")]),a._v(" "),s("h2",{attrs:{id:"相关脚本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关脚本"}},[a._v("#")]),a._v(" 相关脚本")]),a._v(" "),s("ol",[s("li",[s("p",[a._v("阿里开源的 "),s("a",{attrs:{href:"https://arthas.aliyun.com/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Arthas"),s("OutboundLink")],1)])]),a._v(" "),s("li",[s("p",[a._v("看了下有位大佬提个 "),s("a",{attrs:{href:"https://github.com/emacsist/emacsist.github.io/issues/2",target:"_blank",rel:"noopener noreferrer"}},[a._v("issue"),s("OutboundLink")],1),a._v(" ，推荐了个自动化脚本，亲测更好用点。这样子就可以免去上面的一步一步地查找和计算了。\n所以，这里也直接引用这个工具。有需要的可以用下。"),s("br"),a._v(" "),s("a",{attrs:{href:"https://github.com/oldratlee/useful-scripts/blob/master/docs/java.md#beer-show-busy-java-threads",target:"_blank",rel:"noopener noreferrer"}},[a._v("show-busy-java-threads"),s("OutboundLink")],1)])])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);