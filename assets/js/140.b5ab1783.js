(window.webpackJsonp=window.webpackJsonp||[]).push([[140],{607:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("Boxx"),t._v(" "),s("h2",{attrs:{id:"spring基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring基础"}},[t._v("#")]),t._v(" Spring基础")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("1. Spring两大核心？")]),s("p",[t._v("IOC控制反转， AOP面向切面编程")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("2. IOC控制反转到底反转了什么？")]),s("p",[t._v("​\t"),s("strong",[t._v("创建对象的过程，形成对象与对象之间依赖关系的操作")]),s("br"),t._v("\n​\t(Martin: 依赖对象的获得被反转了，本来应该是我们自己new， 现在是通过SpringIOC容器注入)")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("3. 什么是AOP？")]),s("p",[t._v("​\tAOP即"),s("strong",[t._v("面向切面编程")]),t._v("，关注的是"),s("code",[t._v("非核心业务的处理")]),s("br"),t._v("\n​\t"),s("strong",[t._v("用到的地方")]),t._v("：比如日志、网站的访问次数等"),s("br"),t._v("\n​\t"),s("strong",[t._v("主要目的")]),t._v(":：核心业务和非核心业务之间的解耦"),s("br"),t._v("\n​\t底层使用了"),s("strong",[t._v("动态代理")]),t._v("模式"),s("br"),t._v("\n​\t"),s("strong",[t._v("要素")]),t._v("：advice(非核心业务的载体)， pointcut(非核心业务的放置位置)，\n​\t\tadvisor(建立advice和pointcut之间的联系)")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("4. 反转之后的好处？")]),s("p",[t._v("​\t有助于类与类之间的"),s("strong",[t._v("解耦")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("5. IOC的好处？")]),s("p",[t._v("​\t将对象的创建和属性的赋值完全转交给Spring，\n​\t从而降低类与类之间的依赖关系，达到松散耦合的目的")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("6. ICO的核心？")]),s("p",[t._v("​\tIOC容器之所以叫IOC容器， 是因为其中的IOC指的是"),s("code",[t._v("将主动new变成了被动注入")]),s("br"),t._v("\n​\t从此角度出发， IOC的核心是"),s("code",[t._v("DI依赖注入")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("7. DI是什么？")]),s("p",[t._v("​\t依赖注入，指的是建立每个对象之间关系的方式，也就是对属性赋值的操作")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("8. Bean的属性都有？")]),s("p",[t._v("​\t"),s("em",[s("strong",[t._v("id")])]),t._v("：(每个IOC容器对象的唯一标识)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("class")])]),t._v("：(当前类对应的类型)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("scope")])]),t._v("：(作用范围)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("lazy-init")])]),t._v("：(是否 延迟加载)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("factory-method")])]),t._v("：(指定返回返回该对象的方法名称)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("factory-bean")])]),t._v("：(指定工厂实例)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("init-method")])]),t._v("：(对象初始化调用的方法)，"),s("br"),t._v("\n​\t"),s("em",[s("strong",[t._v("destroy-method")])])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("9. scope分别有几种情况？如何配置？")]),s("ul",[s("li",[s("p",[t._v("singleton，prototype，request，session，globalSession")])]),t._v(" "),s("li",[s("p",[t._v("一般"),s("code",[t._v("无状态的类的对象都配置成singleton")]),t._v("，无状态的类一般指像Service和Dao层这样逻辑处理类"),s("br"),s("code",[t._v("有状态的类需要设置成prototype或request")]),t._v("，一般指像Action一样存在多实例， 并且其中数据都不同")])])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("10. Spring创建对象的方式？")]),s("ol",[s("li",[t._v("构造方法创建(id+class)；")]),t._v(" "),s("li",[t._v("静态工厂创建(class+factory-method)；")]),t._v(" "),s("li",[t._v("实例工厂创建(factory-bean+factory-method)")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("11. 完成注入的方式？")]),s("ol",[s("li",[t._v("setter注入 <property ...>")]),t._v(" "),s("li",[t._v("构造方法注入 <constructor-arg ...>")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("12. Schema是什么？优势？")]),s("ul",[s("li",[s("p",[t._v("用来校验xml文件规范的xsd的文件")]),t._v(" "),s("ol",[s("li",[t._v("基于xml语法")]),t._v(" "),s("li",[t._v("扩充了数据类型")]),t._v(" "),s("li",[t._v("支持命名空间")])]),t._v(" "),s("ul",[s("li",[t._v("schema最重要的能力之一就是对数据类型的支持")])])])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("13. 复杂属性如何注入？")]),s("ul",[s("li",[t._v("数组/List/Set "),s("br"),t._v("<property><array/list/set><value>value</value>")]),t._v(" "),s("li",[t._v("Map "),s("br"),t._v(' <map><entry key="" value=""/>')]),t._v(" "),s("li",[t._v("Properties "),s("br"),t._v(' <props><prop key="">vlaue</prop>')])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("14. 常用Spring注解？")]),s("p",[t._v("@Component， @Repository， @Service， @Controller\n@Autowired， @Qualifier， @Scope，@Value\n@Aspect， @Pointcut， @Before， @After， @AfterReturning， @Around， @AfterThrowing")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("15. 接受文件:")]),s("p",[t._v('​\t@RequestParam(value="file") MultipartFile file')])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("16. 关于日期、时间")]),s("ul",[s("li",[t._v("映射类声明变量前，加入此注解:\n"),s("ol",[s("li",[s("strong",[t._v("@DatetimeFormat")]),t._v("是将String转换成Date，一般前台给后台传值时用(springmvc用)")]),t._v(" "),s("li",[t._v("将Date转换成String  一般后台传值给前台时设置响应方式为\n"),s("strong",[t._v('@JsonFormat(pattern="yyyy-MM-dd")')])]),t._v(" "),s("li",[s("strong",[t._v('@JsonFormat(pattern = "yyyy-MM-dd HH:mm:ss"，timezone = "GMT+8")')]),s("br"),t._v("只争对json响应式的处理(中国为东8区)")]),t._v(" "),s("li",[s("strong",[t._v("@JsonIgnore")]),t._v(" json响应式忽略这个属性\nprivate Date hiredate;")])])])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("17. 使用注解完成IOC的流程？")]),s("ol",[s("li",[t._v("添加context命名空间以及schemaLocation")]),t._v(" "),s("li",[t._v('配置文件中添加上下文组件扫描<context:component-scan base-package="com"/>')]),t._v(" "),s("li",[t._v("给所有需要放入IOC容器中的组件添加注解@Component/@S../@C../@R../@Scope")]),t._v(" "),s("li",[t._v("给所有需要注入的属性添加注解@Autowired或@Resource")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("18. @Resource和@Autowired的区别？")]),s("ol",[s("li",[s("strong",[t._v("来源不同")]),s("br"),t._v(" "),s("strong",[t._v("@Autowired")]),t._v("来自Spring类库中，"),s("strong",[t._v("@Resource")]),t._v("是J2EE官方类库中的")]),t._v(" "),s("li",[s("strong",[t._v("底层匹配机制不同")]),s("br"),t._v(" "),s("strong",[t._v("@Autowired")]),t._v("优先按照类型进行匹配，如果存在一个接口多个实现类， 再去按照属性名匹配，\n如果匹配不到，抛出异常NoUniqueBeanDefinitionException，\n此时，可通过 "),s("strong",[t._v('Qualifier("对象名")')]),t._v(" 指定注入对象"),s("br"),t._v(" "),s("strong",[t._v("@Resource")]),t._v("优先按照属性名进行匹配，如果匹配不到，再去按照类型进行匹配，\n如果匹配到多个类型，抛出异常NoUniqueBeanDefinitionException\n此时，可通过 "),s("strong",[t._v('@Resource(name="对象名")')]),t._v(" 指定注入对象")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("19. 反射涉及到哪些类？分别对应哪些方法？")]),s("ul",[s("li",[s("em",[s("strong",[t._v("Class")])]),t._v("：太多， 比如getDeclaredConstructors()， c.newInstance()")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("Field")])]),t._v("： get(obj)，set(obj,value)")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("Method")])]),t._v("： invoke(obj, a.class, b.class, ...)")]),t._v(" "),s("li",[s("em",[s("strong",[t._v("Constructor")])]),t._v("： newInstance(a.class, b.class ...)，setAccessible(true)")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("20. 常用设计模式？")]),s("p",[t._v("​\t单例模式， 工厂模式， 观察者模式(监听器)， 装饰者模式(包装流)， 代理模式(AOP)")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("21. spring有几种通知(增强)？")]),s("ol",[s("li",[t._v("前置通知  before")]),t._v(" "),s("li",[t._v("后置通知  after\nafterReturnning")]),t._v(" "),s("li",[t._v("环绕通知  aroud")]),t._v(" "),s("li",[t._v("异常通知  throws")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("22. 都有哪几种动态代理？")]),s("ul",[s("li",[t._v("jdk     依赖接口")]),t._v(" "),s("li",[t._v("cglib\t继承关系")])])]),s("h2",{attrs:{id:"springmvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#springmvc"}},[t._v("#")]),t._v(" SpringMVC")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("1、什么是Spring MVC ？简单介绍下你对springMVC的理解?")]),s("p",[t._v("Spring MVC是一个基于MVC架构的用来简化web应用程序开发的应用开发框架，它是Spring的一个模块,无需中间整合层来整合。")]),t._v(" "),s("p",[t._v("它和Struts2一样都属于"),s("strong",[t._v("表现层框架")]),t._v("。在web模型中，MVC是一种很流行的框架，通过把Model，View，Controller分离，把较为复杂的web应用分成逻辑清晰的几部分，简化开发，减少出错，方便组内开发人员之间的配合。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("2、SpringMVC的流程？")]),s("p",[t._v("（1）用户发送请求至"),s("u",[t._v("前端控制器")]),t._v(" "),s("em",[s("strong",[t._v("DispatcherServlet")])]),t._v("；")]),t._v(" "),s("p",[t._v("（2） DispatcherServlet收到请求后，调用 "),s("em",[s("strong",[t._v("HandlerMapping")])]),t._v(" "),s("u",[t._v("处理器映射器")]),t._v("，请求获取Handle；")]),t._v(" "),s("p",[t._v("（3）处理器映射器根据请求url找到具体的处理器，生成处理器对象及处理器拦截器(如果有则生成)一并返回给DispatcherServlet；")]),t._v(" "),s("p",[t._v("（4）DispatcherServlet通过 "),s("em",[s("strong",[t._v("HandlerAdapter")])]),t._v(" "),s("u",[t._v("处理器适配器")]),t._v("调用处理器；")]),t._v(" "),s("p",[t._v("（5）"),s("u",[t._v("执行处理器")]),t._v("("),s("em",[s("strong",[t._v("Handler")])]),t._v("，也叫后端控制器)；")]),t._v(" "),s("p",[t._v("（6）Handler执行完成"),s("u",[s("strong",[t._v("返回ModelAndView")])]),t._v("；")]),t._v(" "),s("p",[t._v("（7）HandlerAdapter将Handler执行结果ModelAndView返回给DispatcherServlet；")]),t._v(" "),s("p",[t._v("（8）DispatcherServlet将ModelAndView传给 "),s("em",[s("strong",[t._v("ViewReslover")])]),t._v(" "),s("u",[t._v("视图解析器")]),t._v("进行解析；")]),t._v(" "),s("p",[t._v("（9）ViewReslover解析后返回具体View；")]),t._v(" "),s("p",[t._v("（10）DispatcherServlet对View进行渲染视图（即将模型数据填充至视图中）")]),t._v(" "),s("p",[t._v("（11）DispatcherServlet响应用户。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("3、Springmvc的优点:")]),s("p",[t._v("（1）它是基于"),s("strong",[t._v("组件技术")]),t._v("的。全部的应用对象,无论控制器和视图,还是业务对象之类的都是 java组件，并且和Spring提供的其他基础结构紧密集成")]),t._v(" "),s("p",[t._v("（2）不依赖于Servlet API(目标虽是如此,但是在实现的时候确实是依赖于Servlet的)")]),t._v(" "),s("p",[t._v("（3）可以任意使用各种视图技术，而不仅仅局限于JSP")]),t._v(" "),s("p",[t._v("（4）支持各种请求资源的映射策略")]),t._v(" "),s("p",[t._v("（5）它应是易于扩展的")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("4、Spring MVC的主要组键？")]),s("p",[t._v("（1）"),s("strong",[t._v("前端控制器")]),t._v("DispatcherServlet（不需要程序员开发）")]),t._v(" "),s("p",[t._v("作用：接收请求、响应结果 相当于转发器，有了DispatcherServlet 就减少了其它组件之间的耦合度。")]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("处理器映射器")]),t._v("HandlerMapping（不需要程序员开发）")]),t._v(" "),s("p",[t._v("作用：根据请求的URL来查找Handler")]),t._v(" "),s("p",[t._v("（3）"),s("strong",[t._v("处理器适配器")]),t._v("HandlerAdapter")]),t._v(" "),s("p",[t._v("注意：在编写Handler的时候要按照HandlerAdapter要求的规则去编写，这样适配器HandlerAdapter才可以正确的去执行Handler。")]),t._v(" "),s("p",[t._v("（4）"),s("strong",[t._v("处理器")]),t._v("Handler（需要程序员开发）")]),t._v(" "),s("p",[t._v("（5）"),s("strong",[t._v("视图解析器")]),t._v(" ViewResolver（不需要程序员开发）")]),t._v(" "),s("p",[t._v("作用：进行视图的解析 根据视图逻辑名解析成真正的视图（view）")]),t._v(" "),s("p",[t._v("（6）"),s("strong",[t._v("视图")]),t._v("View（需要程序员开发jsp）")]),t._v(" "),s("p",[t._v("View是一个接口， 它的实现类支持不同的视图类型（jsp，freemarker，pdf等等）")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("5、springMVC和struts2的区别有哪些?")]),s("p",[t._v("（1）"),s("strong",[t._v("入口不同")]),t._v("：springmvc的入口是一个"),s("code",[t._v("servlet")]),t._v("即前端控制器（DispatchServlet）"),s("br"),t._v("struts2入口是一个"),s("code",[t._v("filter")]),t._v("过虑器（StrutsPrepareAndExecuteFilter）。")]),t._v(" "),s("p",[t._v("（2）"),s("strong",[t._v("实现方式不同")]),t._v("：springmvc是"),s("strong",[t._v("基于方法开发")]),t._v("(一个url对应一个方法)，请求"),s("code",[t._v("参数传递到方法的形参")]),t._v("，可以设计为"),s("strong",[t._v("单例")]),t._v("或多例(建议单例)"),s("br"),t._v("struts2是"),s("strong",[t._v("基于类开发")]),t._v("，"),s("code",[t._v("传递参数是通过类的属性")]),t._v("，只能设计为"),s("strong",[t._v("多例")]),t._v("。")]),t._v(" "),s("p",[t._v("（3）"),s("strong",[t._v("参数解析不同")]),t._v("：Struts采用值栈存储请求和响应的数据，通过OGNL存取数据"),s("br"),t._v("springmvc通过参数解析器是将request请求内容解析，并给方法形参赋值，将数据和视图封装成ModelAndView对象，最后又将ModelAndView中的模型数据通过reques域传输到页面。Jsp视图解析器默认使用jstl。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("6、SpringMVC怎么样设定重定向和转发的？")]),s("p",[t._v('（1）在返回值前面加"'),s("code",[t._v("forward:")]),t._v('"就可以让结果转发,譬如"'),s("code",[t._v("forward:user.do?name=method4")]),t._v('"')]),t._v(" "),s("p",[t._v('（2）在返回值前面加"'),s("code",[t._v("redirect:")]),t._v('"就可以让返回值重定向,譬如"'),s("code",[t._v("redirect:http://www.baidu.com")]),t._v('"')])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("7、SpringMvc怎么和AJAX相互调用的？")]),s("p",[t._v("通过Jackson框架就可以把Java里面的对象直接转化成Js可以识别的Json对象。具体步骤如下 ：")]),t._v(" "),s("p",[t._v("（1）加入Jackson.jar")]),t._v(" "),s("p",[t._v("（2）在配置文件中配置json的映射")]),t._v(" "),s("p",[t._v("（3）在接受Ajax的方法里面可以直接返回Object,List等,但方法前面要加上@ResponseBody注解。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("8、SpringMvc里面拦截器是怎么写的：")]),s("p",[t._v("有两种写法,一种是"),s("strong",[t._v("实现HandlerInterceptor接口")]),t._v(",另外一种是"),s("strong",[t._v("继承适配器类")]),t._v(",接着在接口方法当中，实现处理逻辑；然后在SpringMvc的配置文件中配置拦截器即可:")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 配置SpringMvc的拦截器 --\x3e")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 配置一个拦截器的Bean就可以了 默认是对所有请求都拦截 --\x3e")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("id")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("myInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.abc.action.MyHandlerInterceptor"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("bean")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\t\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 只针对部分请求拦截 --\x3e")]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n    \t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("mapping")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("path")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/modelMap.do"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\t\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("bean")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("class")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("com.abc.action.MyHandlerInterceptorAdapter"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("/>")])]),t._v("\n\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptor")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("mvc:")]),t._v("interceptors")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("9、如何解决POST请求中文乱码问题，GET的又如何处理呢？")]),s("p",[t._v("（1）"),s("strong",[t._v("解决post")]),t._v("请求乱码问题：")]),t._v(" "),s("p",[t._v("在web.xml中加入：")]),t._v(" "),s("div",{staticClass:"language-xml line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-xml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.springframework.web.filter.CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-class")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("encoding"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n    "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("utf-8"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("param-value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("init-param")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("CharacterEncodingFilter"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n  "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("/*"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("url-pattern")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("filter-mapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br"),s("span",{staticClass:"line-number"},[t._v("14")]),s("br"),s("span",{staticClass:"line-number"},[t._v("15")]),s("br"),s("span",{staticClass:"line-number"},[t._v("16")]),s("br"),s("span",{staticClass:"line-number"},[t._v("17")]),s("br"),s("span",{staticClass:"line-number"},[t._v("18")]),s("br"),s("span",{staticClass:"line-number"},[t._v("19")]),s("br"),s("span",{staticClass:"line-number"},[t._v("20")]),s("br"),s("span",{staticClass:"line-number"},[t._v("21")]),s("br"),s("span",{staticClass:"line-number"},[t._v("22")]),s("br"),s("span",{staticClass:"line-number"},[t._v("23")]),s("br")])]),s("p",[t._v("（2）"),s("strong",[t._v("解决get")]),t._v("请求中文参数出现乱码解决方法有两个：")]),t._v(" "),s("p",[t._v("①修改tomcat配置文件添加编码与工程编码一致，如下：")]),t._v(" "),s("p",[s("code",[t._v('<ConnectorURIEncoding="utf-8" connectionTimeout="20000" port="8080" protocol="HTTP/1.1" redirectPort="8443"/>')])]),t._v(" "),s("p",[t._v("②另外一种方法对参数进行重新编码：")]),t._v(" "),s("p",[s("code",[t._v('String userName = new String(request.getParamter("userName").getBytes("ISO8859-1"),"utf-8")')])]),t._v(" "),s("p",[t._v("ISO8859-1是tomcat默认编码，需要将tomcat编码后的内容按utf-8编码。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("10、Spring MVC的异常处理 ？")]),s("p",[t._v("可以将异常"),s("strong",[t._v("抛给Spring框架")]),t._v("，由Spring框架来处理；我们只需要配置简单的异常处理器，在异常处理器中添视图页面即可。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("11、SpringMvc的核心入口类是什么,Struts1,Struts2的分别是什么：")]),s("p",[t._v("SpringMvc的是"),s("strong",[t._v("DispatchServlet")])]),t._v(" "),s("p",[t._v("Struts1的是"),s("strong",[t._v("ActionServlet")])]),t._v(" "),s("p",[t._v("Struts2的是"),s("strong",[t._v("StrutsPrepareAndExecuteFilter")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("12、SpringMvc的控制器是不是单例模式,如果是,有什么问题,怎么解决？")]),s("p",[t._v("是单例模式，所以在多线程访问的时候"),s("strong",[t._v("有线程安全问题")]),t._v("，不要用同步，会影响性能的，解决方案是在控制器里面不能写字段。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("13、SpingMvc中的控制器的注解一般用那个,有没有别的注解可以替代？")]),s("p",[t._v("一般用"),s("code",[t._v("@Conntroller")]),t._v("注解,表示是表现层,不能用用别的注解代替。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("14、 @RequestMapping注解用在类上面有什么作用？")]),s("p",[t._v("是一个用来处理请求地址映射的注解，可用于类或方法上。用于类上，表示类中的所有响应请求的方法都是以该地址作为父路径。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("15、怎么样把某个请求映射到特定的方法上面？")]),s("p",[t._v("直接在方法上面加上注解"),s("code",[t._v("@RequestMapping")]),t._v(",并且在这个注解里面写上要拦截的路径。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("16、如果在拦截请求中,我想拦截get方式提交的方法,怎么配置？")]),s("p",[t._v("可以在@RequestMapping注解里面加上"),s("code",[t._v("method=RequestMethod.GET")]),t._v("。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("17、怎么样在方法里面得到Request,或者Session？")]),s("p",[t._v("直接在方法的形参中声明request,SpringMvc就自动把request对象传入。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("18、如果想在拦截的方法里面得到从前台传入的参数,怎么得到？")]),s("p",[t._v("直接在形参里面声明这个参数就可以,但"),s("strong",[t._v("必须名字和传过来的参数一样")]),t._v("。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("19、如果前台有很多个参数传入,并且这些参数都是一个对象的,那么怎么样快速得到这个对象？")]),s("p",[t._v("直接在方法中声明这个对象,SpringMvc就自动会把属性赋值到这个对象里面。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("20、SpringMvc中函数的返回值是什么？")]),s("p",[t._v("返回值可以有很多类型,有"),s("code",[t._v("String")]),t._v(", "),s("code",[t._v("ModelAndView")]),t._v("，但一般用String比较好。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("21、SpringMvc用什么对象从后台向前台传递数据的？")]),s("ol",[s("li",[t._v("使用Map、Model和ModelMap的方式")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),s("span",{pre:!0,attrs:{class:"token generics"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelMap")]),t._v(" modelMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//1.放在map里  ")]),t._v("\n    map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"names"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("asList")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"caoyc"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhh"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cjx"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//2.放在model里 建议使用")]),t._v("\n    model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"time"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Date")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//3.放在request里  ")]),t._v("\n    request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"request"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requestValue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//4.放在modelMap中 ")]),t._v("\n    modelMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addAttribute")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"city"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ChengDu"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    modelMap"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"gender"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"male"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"hello"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br"),s("span",{staticClass:"line-number"},[t._v("8")]),s("br"),s("span",{staticClass:"line-number"},[t._v("9")]),s("br"),s("span",{staticClass:"line-number"},[t._v("10")]),s("br"),s("span",{staticClass:"line-number"},[t._v("11")]),s("br"),s("span",{staticClass:"line-number"},[t._v("12")]),s("br"),s("span",{staticClass:"line-number"},[t._v("13")]),s("br")])]),s("p",[t._v("JSP写法:")]),t._v(" "),s("div",{staticClass:"language-jsp line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("time:${requestScope.time}\nnames:${requestScope.names }\ncity:${requestScope.city }\ngender:${requestScope.gender }\nrequest:${requestScope.request}\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("ol",{attrs:{start:"2"}},[s("li",[t._v("使用ModelAndView的方式:")])]),t._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestMapping")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/test2.do"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("method "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RequestMethod")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("POST")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("checknameIsExist2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RequestParam")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sid"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" sid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Model")]),t._v(" model"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HttpServletRequest")]),t._v(" request"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),t._v(" mav "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ModelAndView")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    mav"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addObject")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ModelAndView"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"ModelAndViewValue"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//设置要跳转的页面，与返回值时String时返回success类似，以下跳转到/student/studentList.jsp  ")]),t._v("\n    mav"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("setViewName")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/student/studentList"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" mav"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("22、SpringMvc中有个类把视图和数据都合并的一起的,叫什么？")]),s("p",[t._v("叫"),s("strong",[t._v("ModelAndView")]),t._v("。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("23、怎么样把ModelMap里面的数据放入Session里面？")]),s("p",[t._v("可以在类上面加上 "),s("strong",[t._v("@SessionAttributes")]),t._v(" 注解,里面包含的字符串就是要放入session里面的key。")])]),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("24、当一个方法向AJAX返回特殊对象,譬如Object,List等,需要做什么处理？")]),s("p",[t._v("要加上 "),s("strong",[t._v("@ResponseBody")]),t._v(" 注解。")])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);