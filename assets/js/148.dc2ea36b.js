(window.webpackJsonp=window.webpackJsonp||[]).push([[148],{616:function(a,t,s){"use strict";s.r(t);var n=s(4),e=Object(n.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("Boxx"),a._v(" "),t("p",[a._v("Spring 的核心容器由两个部分组成：BeanFactory 和 ApplicationContext。BeanFactory 是 Spring 的基础，负责实例化、配置和管理应用程序中的对象。ApplicationContext 是 BeanFactory 的一个更高级别的实现，提供了额外的功能，如国际化、事件传播和Bean预处理。")]),a._v(" "),t("p"),t("div",{staticClass:"table-of-contents"},[t("ul",[t("li",[t("a",{attrs:{href:"#核心容器-defaultlistablebeanfactory"}},[a._v("核心容器 DefaultListableBeanFactory")]),t("ul",[t("li",[t("a",{attrs:{href:"#定义一些职责和能力"}},[a._v("定义一些职责和能力：")])]),t("li",[t("a",{attrs:{href:"#具体的实现"}},[a._v("具体的实现：")])]),t("li",[t("a",{attrs:{href:"#将实现加入原有的逻辑中"}},[a._v("将实现加入原有的逻辑中：")])]),t("li",[t("a",{attrs:{href:"#测试"}},[a._v("测试：")])])])]),t("li",[t("a",{attrs:{href:"#实例化"}},[a._v("实例化")]),t("ul",[t("li",[t("a",{attrs:{href:"#定义一些职责和能力"}},[a._v("定义一些职责和能力：")])]),t("li",[t("a",{attrs:{href:"#具体的实现"}},[a._v("具体的实现：")])]),t("li",[t("a",{attrs:{href:"#将实现加入原有的逻辑中"}},[a._v("将实现加入原有的逻辑中：")])]),t("li",[t("a",{attrs:{href:"#测试"}},[a._v("测试：")])])])]),t("li",[t("a",{attrs:{href:"#属性填充"}},[a._v("属性填充")]),t("ul",[t("li",[t("a",{attrs:{href:"#定义一些职责和能力"}},[a._v("定义一些职责和能力：")])]),t("li",[t("a",{attrs:{href:"#具体的实现"}},[a._v("具体的实现：")])]),t("li",[t("a",{attrs:{href:"#将实现加入原有的逻辑中"}},[a._v("将实现加入原有的逻辑中：")])]),t("li",[t("a",{attrs:{href:"#测试"}},[a._v("测试：")])])])])])]),t("p"),a._v(" "),t("p",[a._v("设计一个Spring容器需要考虑以下几个方面：")]),a._v(" "),t("ol",[t("li",[a._v("容器初始化")])]),a._v(" "),t("p",[a._v("Spring 容器初始化过程中需要完成的任务包括：读取 XML 配置文件，解析 XML 配置信息，创建 Bean 对象，进行 Bean 之间的依赖注入等。因此，设计一个高效的初始化过程是非常重要的。可以考虑采用单例模式，使用懒加载机制来避免无用的资源浪费。")]),a._v(" "),t("ol",{attrs:{start:"2"}},[t("li",[a._v("Bean 的实例化和管理")])]),a._v(" "),t("p",[a._v("在设计 Spring 容器时，需要考虑如何管理 Bean 的生命周期，包括 Bean 的实例化、初始化、销毁等。可以使用反射机制来实例化 Bean，使用依赖注入技术来完成 Bean 之间的依赖关系。对于 Bean 的生命周期管理，可以使用 BeanPostProcessor 和 BeanFactoryPostProcessor 等机制。")]),a._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[a._v("依赖注入")])]),a._v(" "),t("p",[a._v("依赖注入是 Spring 的核心功能之一，它使得 Bean 之间的关系更加松散。设计一个高效的依赖注入机制是非常重要的。可以考虑使用自动装配机制，根据 Bean 之间的依赖关系自动完成依赖注入。同时，为了避免循环依赖问题，可以使用构造函数注入或者延迟依赖注入等机制。")]),a._v(" "),t("ol",{attrs:{start:"4"}},[t("li",[a._v("AOP")])]),a._v(" "),t("p",[a._v("面向切面编程（AOP）是Spring的另一个核心功能。在设计 Spring 容器时，需要考虑如何支持 AOP。可以使用代理模式或者字节码增强技术来实现 AOP 功能。同时，为了方便用户使用，可以提供注解或者 XML 配置文件等方式来配置 AOP。")]),a._v(" "),t("ol",{attrs:{start:"5"}},[t("li",[a._v("Web 支持")])]),a._v(" "),t("p",[a._v("Spring 也提供了 Web 支持，包括 MVC 架构和 RESTful 服务等。在设计 Spring 容器时，需要考虑如何支持 Web 功能。可以使用 Servlet 容器来支持 Web 功能，并提供注解或者 XML 配置文件等方式来配置 Web 功能。")]),a._v(" "),t("p",[a._v("总的来说，设计一个高效、易用、灵活的 Spring 容器需要考虑多个方面，包括容器初始化、Bean 的实例化和管理、依赖注入、AOP 和 Web 支持等。需要根据具体需求来确定设计方案，并不断优化和改进。")]),a._v(" "),t("h2",{attrs:{id:"核心容器-defaultlistablebeanfactory"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#核心容器-defaultlistablebeanfactory"}},[a._v("#")]),a._v(" 核心容器 DefaultListableBeanFactory")]),a._v(" "),t("p",[a._v("对 Spring 中的核心类：DefaultListableBeanFactory 做一个简单初步的实现：")]),a._v(" "),t("h3",{attrs:{id:"定义一些职责和能力"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义一些职责和能力"}},[a._v("#")]),a._v(" 定义一些职责和能力：")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("BeanFactory：提供获取 Bean 的能力；")])]),a._v(" "),t("li",[t("p",[a._v("BeanDefinition：Spring 可以通过 xml 或 注解 的方式加载一个 Bean，但为了更好的扩展，不管从何处加载的 Bean， 最好都统一转换为一个指定对象，\n那么就需要定义一个统一的门面对象：BeanDefinition，只要有 BeanDefinition 我们就可以实例化一个 Bean；")])]),a._v(" "),t("li",[t("p",[a._v("SingletonBeanRegistry：提供获取一个 单例Bean 的能力（其实就是通过每个BeanDefinition定义的Class反射获得一个Bean，并缓存起来）；")])]),a._v(" "),t("li",[t("p",[a._v("BeanDefinitionRegistry：提供注册 BeanDefinition 的能力；")])])]),a._v(" "),t("h3",{attrs:{id:"具体的实现"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体的实现"}},[a._v("#")]),a._v(" 具体的实现：")]),a._v(" "),t("ol",[t("li",[t("p",[a._v("DefaultSingletonBeanRegistry： implements SingletonBeanRegistry， 实现了 单例Bean 的添加，获取；")])]),a._v(" "),t("li",[t("p",[a._v("AbstractBeanFactory：extends DefaultSingletonBeanRegistry implements BeanFactory， 实现了 getBean(String beanName)\n而 getBean(String beanName) 的实现则主要是调用留给子类实现的空方法 createBean(beanName, beanDefinition)；")])]),a._v(" "),t("li",[t("p",[a._v("AbstractAutowireCapableBeanFactory：extends AbstractBeanFactory，实现createBean(beanName, beanDefinition)， 实现通过\nBeanDefinition 创建 Bean 的能力；")])]),a._v(" "),t("li",[t("p",[a._v("★ DefaultListableBeanFactory：extends AbstractAutowireCapableBeanFactory implements BeanDefinitionRegistry， 实现注册\nBeanDefinition 的能力，获得一个 Bean 的能力；")])])]),a._v(" "),t("h3",{attrs:{id:"将实现加入原有的逻辑中"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将实现加入原有的逻辑中"}},[a._v("#")]),a._v(" 将实现加入原有的逻辑中：")]),a._v(" "),t("ul",[t("li",[a._v("无")])]),a._v(" "),t("h3",{attrs:{id:"测试"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试"}},[a._v("#")]),a._v(" 测试：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("testDefaultListableBeanFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// DefaultListableBeanFactory 的用法")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),a._v(" beanFactory"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 注册Bean的能力：将一个普通对象转换为 BeanDefinition，并注册进容器中")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),a._v(" beanDefinition"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerBeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("beanDefinition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 获取Bean的能力：从容器中获取指定 Bean，第一次获取会示例化并缓存")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" cat"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   cat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. 第二次会直接从单例缓存中获取")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" cat_cache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   cat_cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("h2",{attrs:{id:"实例化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#实例化"}},[a._v("#")]),a._v(" 实例化")]),a._v(" "),t("p",[a._v("上述方式只支持默认的无参构造实例化 Bean。")]),a._v(" "),t("h3",{attrs:{id:"定义一些职责和能力-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义一些职责和能力-2"}},[a._v("#")]),a._v(" 定义一些职责和能力：")]),a._v(" "),t("ol",[t("li",[a._v("InstantiationStrategy：要想容器支持对 Bean的有参构造器 实例化的方式，需要定义一个实例化策略接口 InstantiationStrategy，当然，定义这个 InstantiationStrategy 策略接口也是为了支持不同实例化方式方便扩展。")])]),a._v(" "),t("p",[a._v("添加一个实例化方法：Object instantiatie(BeanDefinition beanDefinition, String beanName, Constructor constructor, Object[] args);")]),a._v(" "),t("p",[a._v("一个 Bean 的实例化，需要的基本参数有：")]),a._v(" "),t("ul",[t("li",[a._v("BeanDefinition：主要保存了一个具体类的定义，主要就是实例化这个类")]),a._v(" "),t("li",[a._v("Constructor：通过哪个构造方法实例化")]),a._v(" "),t("li",[a._v("args：构造方法的参数")])]),a._v(" "),t("h3",{attrs:{id:"具体的实现-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体的实现-2"}},[a._v("#")]),a._v(" 具体的实现：")]),a._v(" "),t("ul",[t("li",[t("p",[a._v("SimpleInstantiationStrategy：JDK 实例化策略")])]),a._v(" "),t("li",[t("p",[a._v("CglibSubclassingInstantiationStrategy：cglib 实例化策略")])])]),a._v(" "),t("h3",{attrs:{id:"将实现加入原有的逻辑中-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将实现加入原有的逻辑中-2"}},[a._v("#")]),a._v(" 将实现加入原有的逻辑中：")]),a._v(" "),t("ol",[t("li",[a._v("AbstractAutowireCapableBeanFactory：修改 createBean(String beanName, BeanDefinition beanDefinition) 实现，加入支持有参构造的实例化策略  createBeanInstance(beanDefinition, beanName, args);。")])]),a._v(" "),t("h3",{attrs:{id:"测试-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试-2"}},[a._v("#")]),a._v(" 测试：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Test")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("testDefaultListableBeanFactoryGetBeanWithConstructor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// DefaultListableBeanFactory 的用法")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),a._v(" beanFactory"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 注册Bean的能力：将一个普通对象转换为 BeanDefinition，并注册进容器中")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),a._v(" beanDefinition"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerBeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("beanDefinition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 获取Bean的能力：从容器中获取指定 Bean（通过有参构造），第一次获取会示例化并缓存")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" cat"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Cat -> Constructor"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   cat"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3. 第二次会直接从单例缓存中获取")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),a._v(" cat_cache"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   cat_cache"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br")])]),t("h2",{attrs:{id:"属性填充"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#属性填充"}},[a._v("#")]),a._v(" 属性填充")]),a._v(" "),t("p",[a._v("完成 Bean 的实例化之后，进行 Bean 的属性填充。")]),a._v(" "),t("h3",{attrs:{id:"定义一些职责和能力-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#定义一些职责和能力-3"}},[a._v("#")]),a._v(" 定义一些职责和能力：")]),a._v(" "),t("ul",[t("li",[a._v("无")])]),a._v(" "),t("h3",{attrs:{id:"具体的实现-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#具体的实现-3"}},[a._v("#")]),a._v(" 具体的实现：")]),a._v(" "),t("ol",[t("li",[a._v("PropertyValue：将一个 Bean 本身的 字段名、字段值映射为一个 PropertyValue；")]),a._v(" "),t("li",[a._v("PropertyValues：当一个 Bean 有多个字段时，将 PropertyValue 保存为一个集合；")]),a._v(" "),t("li",[a._v("BeanReference：属性填充时可能遇到 Bean 的依赖，A 依赖 B, B 依赖 C, 循环调用实例化，主要解决 Bean依赖 问题的属性填充；")])]),a._v(" "),t("h3",{attrs:{id:"将实现加入原有的逻辑中-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#将实现加入原有的逻辑中-3"}},[a._v("#")]),a._v(" 将实现加入原有的逻辑中：")]),a._v(" "),t("ol",[t("li",[a._v("BeanDefinition：之前只保存了实例化的类型Class（实例化用），现在将 PropertyValues 也填充进去（属性填充用）；")]),a._v(" "),t("li",[a._v("AbstractAutowireCapableBeanFactory：修改 createBeanInstance(String beanName, BeanDefinition beanDefinition, Object[] args)\n加入属性填充步骤 applyPropertyValues(beanName, bean, beanDefinition)；")])]),a._v(" "),t("h3",{attrs:{id:"测试-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#测试-3"}},[a._v("#")]),a._v(" 测试：")]),a._v(" "),t("div",{staticClass:"language-java line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-java"}},[t("code",[a._v(" "),t("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Test")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("void")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("testDefaultListableBeanFactoryGetBeanWithApplyPropertyValues")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// DefaultListableBeanFactory 的用法")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),a._v(" beanFactory"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("DefaultListableBeanFactory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   \n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 1. 注册Bean的能力：将一个普通对象（和属性）转换为 BeanDefinition，并注册进容器中")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 注册一个 cat")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValues")]),a._v(" catPropertyValues"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValues")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   catPropertyValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addPropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"TomCat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),a._v(" catBeanDefinition"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Cat")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("catPropertyValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerBeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("catBeanDefinition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 注册一个 dog，dog 依赖 cat")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValues")]),a._v(" dogPropertyValues"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValues")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   dogPropertyValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addPropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"name"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"JjDog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   dogPropertyValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("addPropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("PropertyValue")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanReference")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"cat"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),a._v(" dogBeanDefinition"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("BeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("dogPropertyValues"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("registerBeanDefinition")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("dogBeanDefinition"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   \n   "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 2. 获取Bean的能力：从容器中获取指定 Bean，第一次获取会示例化并缓存")]),a._v("\n   "),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dog")]),a._v(" dog"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Dog")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("beanFactory"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("getBean")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"dog"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n   dog"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("printName")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br"),t("span",{staticClass:"line-number"},[a._v("14")]),t("br"),t("span",{staticClass:"line-number"},[a._v("15")]),t("br"),t("span",{staticClass:"line-number"},[a._v("16")]),t("br"),t("span",{staticClass:"line-number"},[a._v("17")]),t("br"),t("span",{staticClass:"line-number"},[a._v("18")]),t("br"),t("span",{staticClass:"line-number"},[a._v("19")]),t("br"),t("span",{staticClass:"line-number"},[a._v("20")]),t("br"),t("span",{staticClass:"line-number"},[a._v("21")]),t("br"),t("span",{staticClass:"line-number"},[a._v("22")]),t("br")])]),t("Reward")],1)}),[],!1,null,null,null);t.default=e.exports}}]);