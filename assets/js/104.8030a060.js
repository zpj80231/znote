(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{572:function(t,e,s){"use strict";s.r(e);var a=s(4),n=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("Boxx"),t._v(" "),e("p",[t._v("Spring Boot 2.2.0 版本开始引入 JUnit 5 作为单元测试默认库，在 Spring Boot 2.2.0 版本之前，spring-boot-starter-test 包含了 JUnit 4 的依赖，Spring Boot 2.2.0 版本之后替换成了 Junit Jupiter （没有@RunWith注解了）。")]),t._v(" "),e("p"),e("div",{staticClass:"table-of-contents"},[e("ul",[e("li",[e("a",{attrs:{href:"#_1-功能分类"}},[t._v("1. 功能分类")])]),e("li",[e("a",{attrs:{href:"#_1-1-配置类型的注解"}},[t._v("1.1 配置类型的注解")]),e("ul",[e("li",[e("a",{attrs:{href:"#_1-2-mock类型的注解"}},[t._v("1.2 mock类型的注解")])]),e("li",[e("a",{attrs:{href:"#_1-3-自动配置类型的注解-autoconfigure"}},[t._v("1.3 自动配置类型的注解（@AutoConfigure*）")])]),e("li",[e("a",{attrs:{href:"#_1-4-启动测试类型的注解-test"}},[t._v("1.4 启动测试类型的注解（@*Test）")])])])]),e("li",[e("a",{attrs:{href:"#_2-相互之间的搭配组合"}},[t._v("2. 相互之间的搭配组合")])]),e("li",[e("a",{attrs:{href:"#_3-相似注解的区别和联系"}},[t._v("3. 相似注解的区别和联系")]),e("ul",[e("li",[e("a",{attrs:{href:"#_3-1-testcomment-vs-comment"}},[t._v("3.1 @TestComment vs @Comment")])]),e("li",[e("a",{attrs:{href:"#_3-2-testconfiguration-vs-configuration"}},[t._v("3.2 @TestConfiguration vs @Configuration")])]),e("li",[e("a",{attrs:{href:"#_3-3-springboottest-vs-webmvctest-或-test"}},[t._v("3.3 @SpringBootTest vs @WebMvcTest(或@*Test)")])])])]),e("li",[e("a",{attrs:{href:"#_4-小结"}},[t._v("4. 小结")])])])]),e("p"),t._v(" "),e("p",[t._v("SpringBootTest默认集成了以下功能：")]),t._v(" "),e("ul",[e("li",[t._v("JUnit 5: Java单元测试框架")]),t._v(" "),e("li",[t._v("Spring Test & Spring Boot Test: Spring Boot的测试工具和支持")]),t._v(" "),e("li",[t._v("AssertJ: 流式断言")]),t._v(" "),e("li",[t._v("Hamcrest: Hamcrest断言")]),t._v(" "),e("li",[t._v("Mockito: Java Mock框架")]),t._v(" "),e("li",[t._v("JSONassert: JSON断言")]),t._v(" "),e("li",[t._v("JsonPath: XPath for JSON")])]),t._v(" "),e("h2",{attrs:{id:"_1-功能分类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-功能分类"}},[t._v("#")]),t._v(" 1. 功能分类")]),t._v(" "),e("p",[t._v("从功能上讲，Spring Boot Test中的注解主要分如下几类：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("类别")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("示例")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("格式")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("配置类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@TestConfiguration")]),t._v("等")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("提供一些测试相关的配置入口")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("mock类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@MockBean")]),t._v("等")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}}),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("提供mock支持")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("启动测试类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@SpringBootTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@*Test")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("以Test结尾的注解，具有加载applicationContext的能力")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置类型")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureJdbc")]),t._v("等")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigure*")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("以AutoConfigure开头的注解，具有加载测试支持功能的能力。")])])])]),t._v(" "),e("h2",{attrs:{id:"_1-1-配置类型的注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-配置类型的注解"}},[t._v("#")]),t._v(" 1.1 配置类型的注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("作用")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("实践中的使用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@TestComponent")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("该注解另一种"),e("code",[t._v("@Component")]),t._v("，在语义上用来指定某个Bean是专门用于测试的。")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("该注解适用于测试代码和正式混合在一起时，不加载被该注解描述的Bean，使用不多。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@TestConfiguration")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("该注解是另一种"),e("code",[t._v("@TestComponent")]),t._v("，它用于补充额外的Bean或覆盖已存在的Bean")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("在不修改正式代码的前提下，使配置更加灵活")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@TypeExcludeFilters")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用来排除"),e("code",[t._v("@TestConfiguration")]),t._v("和"),e("code",[t._v("@TestComponent")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("适用于测试代码和正式代码混合的场景，使用不多")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@OverrideAutoConfiguration")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("可用于覆盖"),e("code",[t._v("@EnableAutoConfiguration")]),t._v("，与"),e("code",[t._v("ImportAutoConfiguration")]),t._v("结合使用，以限制所加载的自动配置类")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("在不修改正式代码的前提下，提供了修改配置自动配置类的能力")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@PropertyMapping")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("定义"),e("code",[t._v("@AutoConfigure*")]),t._v("注解中用到的变量名称，例如在"),e("code",[t._v("@AutoConfigureMockMvc")]),t._v("中定义名为spring.test.mockmvc.webclient.enabled的变量")]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("一般不使用")])])])]),t._v(" "),e("blockquote",[e("p",[t._v("使用"),e("code",[t._v("@SpringBootApplication")]),t._v("启动测试或者生产代码，被"),e("code",[t._v("@TestComponent")]),t._v("描述的Bean会自动被排除掉。如果不是则需要向"),e("code",[t._v("@SpringBootApplication")]),t._v("添加TypeExcludeFilter。")])]),t._v(" "),e("h3",{attrs:{id:"_1-2-mock类型的注解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-mock类型的注解"}},[t._v("#")]),t._v(" 1.2 mock类型的注解")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@MockBean")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用于mock指定的class或被注解的属性（或者说在测试类中排除一个bean，Spring将使用这个mock而不是真正的类，所以不会调用@PostConstruct方法）")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@MockBeans")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("使"),e("code",[t._v("@MockBean")]),t._v("支持在同一类型或属性上多次出现")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@SpyBean")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("用于spy指定的class或被注解的属性")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@SpyBeans")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("使"),e("code",[t._v("@SpyBeans")]),t._v("支持在同一类型或属性上多次出现")])])])]),t._v(" "),e("p",[e("code",[t._v("@MockBean")]),t._v("和"),e("code",[t._v("@SpyBean")]),t._v("这两个注解，在mockito框架中本来已经存在，且功能基本相同。Spring Boot Test又定义一份重复的注解，目的在于使"),e("code",[t._v("MockBean")]),t._v("和"),e("code",[t._v("SpyBean")]),t._v("被ApplicationContext管理，从而方便使用。")]),t._v(" "),e("blockquote",[e("p",[t._v("MockBean和SpyBean功能非常相似，都能模拟方法的各种行为。不同之处在于MockBean是全新的对象，跟正式对象没有关系；而SpyBean与正式对象紧密联系，可以模拟正式对象的部分方法，没有被模拟的方法仍然可以运行正式代码。")])]),t._v(" "),e("h3",{attrs:{id:"_1-3-自动配置类型的注解-autoconfigure"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-自动配置类型的注解-autoconfigure"}},[t._v("#")]),t._v(" 1.3 自动配置类型的注解（@AutoConfigure*）")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("作用")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureJdbc")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 JDBC")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureCache")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置缓存")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureDataLdap")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 LDAP")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureJson")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 JSON")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureJsonTesters")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 JsonTester")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureDataJpa")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 JPA")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureTestEntityManager")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 TestEntityManager")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureRestDocs")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 Rest Docs")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureMockRestServiceServer")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 MockRestServiceServer")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureWebClient")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 WebClient")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureWebFlux")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 WebFlux")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureWebTestClient")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 WebTestClient")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureMockMvc")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 MockMvc")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureWebMvc")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 WebMvc")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureDataNeo4j")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 Neo4j")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureDataRedis")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 Redis")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureJooq")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置 Jooq")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@AutoConfigureTestDatabase")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动配置Test Database，可以使用内存数据库")])])])]),t._v(" "),e("p",[t._v("这些注解可以搭配"),e("code",[t._v("@\\*Test")]),t._v("使用，用于开启在"),e("code",[t._v("@\\*Test")]),t._v("中未自动配置的功能。例如"),e("code",[t._v("@SpringBootTest")]),t._v("和"),e("code",[t._v("@AutoConfigureMockMvc")]),t._v("组合后，就可以注入"),e("code",[t._v("org.springframework.test.web.servlet.MockMvc")]),t._v("。")]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("“自动配置类型”有两种使用方式：")])]),t._v(" "),e("ol",[e("li",[t._v("在功能测试（即使用"),e("code",[t._v("@SpringBootTest")]),t._v("）时显示添加。")]),t._v(" "),e("li",[t._v("一般在切片测试中被隐式使用，例如"),e("code",[t._v("@WebMvcTest")]),t._v("注解时，隐式添加了"),e("code",[t._v("@AutoConfigureCache")]),t._v("、"),e("code",[t._v("@AutoConfigureWebMvc")]),t._v("、"),e("code",[t._v("@AutoConfigureMockMvc")]),t._v("。")])])]),t._v(" "),e("blockquote",[e("p",[e("strong",[t._v("实现原理")]),t._v("\n与"),e("code",[t._v("spring-boot-\bautoconfigure\b\b")]),t._v("中的"),e("code",[t._v("@\\*AutoConfiguration")]),t._v("实现略有不同，Test包中的"),e("code",[t._v("@AutoConfigure\\*")]),t._v("通过"),e("code",[t._v("DeterminableImports")]),t._v("接口作为指定代码的识别入口，通过"),e("code",[t._v("ImportAutoConfiguration")]),t._v("注解作为配置入口，从Test包下的"),e("a",{attrs:{href:"https://github.com/spring-projects/spring-boot/blob/master/spring-boot-project/spring-boot-test-autoconfigure/src/main/resources/META-INF/spring.factories",target:"_blank",rel:"noopener noreferrer"}},[e("code",[t._v("spring.factories")]),e("OutboundLink")],1),t._v("读取配置文件，每个"),e("code",[t._v("@AutoConfigure\\*")]),t._v("中都可以包含多个\bSpring Boot的"),e("code",[t._v("@\\*AutoConfiguration")]),t._v("，例如：")]),t._v(" "),e("p",[e("img",{attrs:{src:"http://ypk1226.com/images/2018/12/autoconfigurewebmvc.png",alt:"AutoConfigureWebMvc"}})]),t._v(" "),e("p",[e("strong",[t._v("AutoConfigureWebMvc")])])]),t._v(" "),e("h3",{attrs:{id:"_1-4-启动测试类型的注解-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-启动测试类型的注解-test"}},[t._v("#")]),t._v(" 1.4 启动测试类型的注解（@*Test）")]),t._v(" "),e("p",[t._v("所有的 "),e("code",[t._v("@*Test")]),t._v(" 注解都被 "),e("code",[t._v("@BootstrapWith")]),t._v(" 注解，它们可以启动 ApplicationContext，是测试的入口，所有的测试类必须声明一个 "),e("code",[t._v("@*Test")]),t._v("注解。")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("注解")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("作用")]),t._v(" "),e("th")])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@SpringBootTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("自动侦测并加载@SpringBootApplication或@SpringBootConfiguration中的配置，默认web环境为MOCK，不监听任务端口")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataRedisTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试对Redis操作，自动扫描被@RedisHash描述的类，并配置Spring Data Redis的库")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataJpaTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试基于JPA的数据库操作，同时提供了TestEntityManager替代JPA的EntityManager")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataJdbcTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试基于Spring Data JDBC的数据库操作")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@JsonTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试JSON的序列化和反序列化")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@WebMvcTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试Spring MVC中的controllers")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@WebFluxTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试Spring WebFlux中的controllers")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@RestClientTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试对REST客户端的操作")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataLdapTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试对LDAP的操作")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataMongoTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试对MongoDB的操作")]),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("@DataNeo4jTest")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("测试对Neo4j的操作")]),t._v(" "),e("td")])])]),t._v(" "),e("blockquote",[e("p",[t._v("除了"),e("code",[t._v("@SpringBootTest")]),t._v("之外的注解都是用来进行切面测试的，他们会默认导入一些自动配置，点击"),e("a",{attrs:{href:"https://docs.spring.io/spring-boot/docs/2.1.0.RELEASE/reference/htmlsingle/#test-auto-configuration",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方docs"),e("OutboundLink")],1),t._v("查看详情。")])]),t._v(" "),e("p",[t._v("一般情况下，推荐使用"),e("code",[t._v("@SpringBootTest")]),t._v("而非其它切片测试的注解，简单有效。若某次改动仅涉及特定切片，可以考虑使用切片测试。")]),t._v(" "),e("p",[e("code",[t._v("@SpringBootTest")]),t._v("是这些注解中最常用的一个，其中包含的配置项如下：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("配置名称")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("value")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定配置属性")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("properties")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定配置属性，和value意义相同")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("classes")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定配置类，等同于"),e("code",[t._v("@ContextConfiguration")]),t._v("中的class，若没有显示指定，将查找嵌套的"),e("code",[t._v("@Configuration")]),t._v("类，然后返回到"),e("code",[t._v("SpringBootConfiguration")]),t._v("搜索配置")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("webEnvironment")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("指定web环境，可选值有："),e("code",[t._v("MOCK")]),t._v("、"),e("code",[t._v("RANDOM_PORT")]),t._v("、"),e("code",[t._v("DEFINED_PORT")]),t._v("、"),e("code",[t._v("NONE")])])])])]),t._v(" "),e("p",[e("code",[t._v("webEnvironment")]),t._v("详细说明：")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",{staticStyle:{"text-align":"left"}},[t._v("可选值")]),t._v(" "),e("th",{staticStyle:{"text-align":"left"}},[t._v("说明")])])]),t._v(" "),e("tbody",[e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("MOCK")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("此值为默认值，该类型提供一个mock环境，此时内嵌的服务（servlet容器）并没有真正启动，也不会监听web端口。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("RANDOM_PORT")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("启动一个真实的web服务，监听一个随机端口。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("DEFINED_PORT")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("启动一个真实的web服务，监听一个定义好的端口（从配置中读取）。")])]),t._v(" "),e("tr",[e("td",{staticStyle:{"text-align":"left"}},[e("code",[t._v("NONE")])]),t._v(" "),e("td",{staticStyle:{"text-align":"left"}},[t._v("启动一个非web的ApplicationContext，既不提供mock环境，也不提供真是的web服务。")])])])]),t._v(" "),e("h2",{attrs:{id:"_2-相互之间的搭配组合"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-相互之间的搭配组合"}},[t._v("#")]),t._v(" 2. 相互之间的搭配组合")]),t._v(" "),e("p",[t._v("典型的搭配如下：")]),t._v(" "),e("div",{staticClass:"language-java line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-java"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("package")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sample"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Before")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("runner"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("RunWith")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sample"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("domain"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleIdentificationNumber")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sample"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleDetails")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("sample"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleDetailsService")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("beans"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("factory"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("annotation"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Autowired")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("autoconfigure"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("jdbc"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("AutoConfigureTestDatabase")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringBootTest")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebEnvironment")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mock"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mockito"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MockBean")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("boot"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("web"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("client"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestRestTemplate")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("springframework"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("test"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("context"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("junit4"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token import static"}},[e("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("org"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mockito"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")])]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("BDDMockito")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token static"}},[t._v("given")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/**\n * {@code @SpringBootTest} with a random port for {@link SampleTestApplication}.\n *\n * @author Phillip Webb\n */")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@RunWith")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SpringRunner")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@SpringBootTest")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("webEnvironment "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WebEnvironment")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RANDOM_PORT")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@AutoConfigureTestDatabase")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SampleTestApplicationWebIntegrationTests")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("final")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleIdentificationNumber")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VIN")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleIdentificationNumber")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n            "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"01234567890123456"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Autowired")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TestRestTemplate")]),t._v(" restTemplate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@MockBean")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleDetailsService")]),t._v(" vehicleDetailsService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setup")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("given")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vehicleDetailsService"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getVehicleDetails")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("VIN")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n                "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("willReturn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("VehicleDetails")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Honda"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Civic"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Test")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("restTemplate"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("getForEntity")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/{username}/vehicle"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"sframework"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br"),e("span",{staticClass:"line-number"},[t._v("9")]),e("br"),e("span",{staticClass:"line-number"},[t._v("10")]),e("br"),e("span",{staticClass:"line-number"},[t._v("11")]),e("br"),e("span",{staticClass:"line-number"},[t._v("12")]),e("br"),e("span",{staticClass:"line-number"},[t._v("13")]),e("br"),e("span",{staticClass:"line-number"},[t._v("14")]),e("br"),e("span",{staticClass:"line-number"},[t._v("15")]),e("br"),e("span",{staticClass:"line-number"},[t._v("16")]),e("br"),e("span",{staticClass:"line-number"},[t._v("17")]),e("br"),e("span",{staticClass:"line-number"},[t._v("18")]),e("br"),e("span",{staticClass:"line-number"},[t._v("19")]),e("br"),e("span",{staticClass:"line-number"},[t._v("20")]),e("br"),e("span",{staticClass:"line-number"},[t._v("21")]),e("br"),e("span",{staticClass:"line-number"},[t._v("22")]),e("br"),e("span",{staticClass:"line-number"},[t._v("23")]),e("br"),e("span",{staticClass:"line-number"},[t._v("24")]),e("br"),e("span",{staticClass:"line-number"},[t._v("25")]),e("br"),e("span",{staticClass:"line-number"},[t._v("26")]),e("br"),e("span",{staticClass:"line-number"},[t._v("27")]),e("br"),e("span",{staticClass:"line-number"},[t._v("28")]),e("br"),e("span",{staticClass:"line-number"},[t._v("29")]),e("br"),e("span",{staticClass:"line-number"},[t._v("30")]),e("br"),e("span",{staticClass:"line-number"},[t._v("31")]),e("br"),e("span",{staticClass:"line-number"},[t._v("32")]),e("br"),e("span",{staticClass:"line-number"},[t._v("33")]),e("br"),e("span",{staticClass:"line-number"},[t._v("34")]),e("br"),e("span",{staticClass:"line-number"},[t._v("35")]),e("br"),e("span",{staticClass:"line-number"},[t._v("36")]),e("br"),e("span",{staticClass:"line-number"},[t._v("37")]),e("br"),e("span",{staticClass:"line-number"},[t._v("38")]),e("br"),e("span",{staticClass:"line-number"},[t._v("39")]),e("br"),e("span",{staticClass:"line-number"},[t._v("40")]),e("br"),e("span",{staticClass:"line-number"},[t._v("41")]),e("br"),e("span",{staticClass:"line-number"},[t._v("42")]),e("br"),e("span",{staticClass:"line-number"},[t._v("43")]),e("br"),e("span",{staticClass:"line-number"},[t._v("44")]),e("br"),e("span",{staticClass:"line-number"},[t._v("45")]),e("br"),e("span",{staticClass:"line-number"},[t._v("46")]),e("br"),e("span",{staticClass:"line-number"},[t._v("47")]),e("br"),e("span",{staticClass:"line-number"},[t._v("48")]),e("br"),e("span",{staticClass:"line-number"},[t._v("49")]),e("br"),e("span",{staticClass:"line-number"},[t._v("50")]),e("br")])]),e("ul",[e("li",[t._v("@RunWith(SpringRunner.class)是JUnit的注解，作用是关联Spring Boot Test，在运行JUnit时同时启动Spring")]),t._v(" "),e("li",[t._v("@SpringBootTest(webEnvironment = WebEnvironment.RANDOM_PORT) 作用是启动Spring的ApplicationContext，参数webEnvironment指定了运行的web环境")]),t._v(" "),e("li",[t._v("@AutoConfigureTestDatabase 作用是启动一个内存数据库，不使用真实的数据库")])]),t._v(" "),e("p",[t._v("其中@RunWith和@"),e("em",[t._v("Test必须存在，@AutoConfigure")]),t._v("可以同时配置任意多个，而配置类型的注解可以在需要时添加。")]),t._v(" "),e("h2",{attrs:{id:"_3-相似注解的区别和联系"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-相似注解的区别和联系"}},[t._v("#")]),t._v(" 3. 相似注解的区别和联系")]),t._v(" "),e("h3",{attrs:{id:"_3-1-testcomment-vs-comment"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-testcomment-vs-comment"}},[t._v("#")]),t._v(" 3.1 @TestComment vs @Comment")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("@TestComponent")]),t._v("是另一种"),e("code",[t._v("@Component")]),t._v("，在语义上用来指定某个Bean是专门用于测试的")]),t._v(" "),e("li",[t._v("使用@SpringBootApplication服务时，"),e("code",[t._v("@TestComponent")]),t._v("会被自动排除")])]),t._v(" "),e("h3",{attrs:{id:"_3-2-testconfiguration-vs-configuration"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-testconfiguration-vs-configuration"}},[t._v("#")]),t._v(" 3.2 @TestConfiguration vs @Configuration")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("@TestConfiguration")]),t._v("是Spring Boot Boot Test提供的，"),e("code",[t._v("@Configuration")]),t._v("是Spring Framework提供的。")]),t._v(" "),e("li",[e("code",[t._v("@TestConfiguration")]),t._v("实际上是也是一种"),e("code",[t._v("@TestComponent")]),t._v("，只是这个"),e("code",[t._v("@TestComponent")]),t._v("专门用来做配置用。")]),t._v(" "),e("li",[e("code",[t._v("@TestConfiguration")]),t._v("和"),e("code",[t._v("@Configuration")]),t._v("不同，它不会阻止"),e("code",[t._v("@SpringBootTest")]),t._v("的查找机制，相当于是对既有配置的补充或覆盖。")])]),t._v(" "),e("h3",{attrs:{id:"_3-3-springboottest-vs-webmvctest-或-test"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-springboottest-vs-webmvctest-或-test"}},[t._v("#")]),t._v(" 3.3 @SpringBootTest vs @WebMvcTest(或@*Test)")]),t._v(" "),e("ul",[e("li",[t._v("都可以启动 Spring 的 ApplicationContext")]),t._v(" "),e("li",[e("code",[t._v("@SpringBootTest")]),t._v("自动侦测并加载"),e("code",[t._v("@SpringBootApplication")]),t._v("或"),e("code",[t._v("@SpringBootConfiguration")]),t._v("中的配置，"),e("code",[t._v("@WebMvcTest")]),t._v("不侦测配置，只是默认加载一些自动配置。")]),t._v(" "),e("li",[e("code",[t._v("@SpringBootTest")]),t._v("测试范围一般比"),e("code",[t._v("@WebMvcTest")]),t._v("大。")])]),t._v(" "),e("h2",{attrs:{id:"_4-小结"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-小结"}},[t._v("#")]),t._v(" 4. 小结")]),t._v(" "),e("p",[t._v("本文主要介绍了Spring Boot Test中新增的注解，这些注解分为这几个类型：配置类型、mock类型、启动测试类型、自动配置类型。")]),t._v(" "),e("ol",[e("li",[t._v("“配置类型”中的"),e("code",[t._v("@TestComponent")]),t._v("、"),e("code",[t._v("@TestConfiguration")]),t._v("、"),e("code",[t._v("@OverrideAutoConfiguration")]),t._v("使配置更加灵活。")]),t._v(" "),e("li",[t._v("封装了"),e("code",[t._v("mockito")]),t._v("的"),e("code",[t._v("@MockBean")]),t._v("和"),e("code",[t._v("@SpyBean")]),t._v("，使其可以自然的注入到Spring容器中。")]),t._v(" "),e("li",[t._v("每个测试类必须包含一个“启动测试类型”的注解("),e("code",[t._v("@\\*Test")]),t._v(")，同时可以根据需要添加”自动配置类型”的注解("),e("code",[t._v("@AutoConfigure*")]),t._v(")。")]),t._v(" "),e("li",[e("code",[t._v("@SpringBootTest")]),t._v("是最常用的“启动测试类型”注解")])])],1)}),[],!1,null,null,null);e.default=n.exports}}]);